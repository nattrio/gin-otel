services:
  clickhouse:
    image: clickhouse/clickhouse-server:23.7
    restart: on-failure
    environment:
      CLICKHOUSE_DB: uptrace
    healthcheck:
      test: ['CMD', 'wget', '--spider', '-q', 'localhost:8123/ping']
      interval: 1s
      timeout: 1s
      retries: 30
    volumes:
      - ch_data2:/var/lib/clickhouse
    ports:
      - '8123:8123'
      - '9000:9000'

  postgres:
    image: postgres:15-alpine
    restart: on-failure
    environment:
      PGDATA: /var/lib/postgresql/data/pgdata
      POSTGRES_USER: uptrace
      POSTGRES_PASSWORD: uptrace
      POSTGRES_DB: uptrace
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U uptrace -d uptrace']
      interval: 1s
      timeout: 1s
      retries: 30
    volumes:
      - 'pg_data3:/var/lib/postgresql/data/pgdata'
    ports:
      - '5432:5432'

  uptrace:
    image: 'uptrace/uptrace:1.7.2'
    #image: 'uptrace/uptrace-dev:latest'
    restart: on-failure
    volumes:
      - ./uptrace.yml:/etc/uptrace/uptrace.yml
    #environment:
    #  - DEBUG=2
    ports:
      - '14317:14317'
      - '14318:14318'

  otelcol:
    image: otel/opentelemetry-collector-contrib:0.88.0
    restart: on-failure
    volumes:
      - ./otel-collector.yaml:/etc/otelcol-contrib/config.yaml
    ports:
      - '4317:4317'
      - '4318:4318'
    extra_hosts:
      - 'host.docker.internal:host-gateway'

  mailpit:
    image: axllent/mailpit
    restart: always
    ports:
      - 1025:1025
      - 8025:8025
    environment:
      MP_MAX_MESSAGES: 5000
      MP_DATA_FILE: /data/mailpit.db
      MP_SMTP_AUTH_ACCEPT_ANY: 1
      MP_SMTP_AUTH_ALLOW_INSECURE: 1
    volumes:
      - mailpit_data:/data

  vector:
    image: timberio/vector:0.28.X-alpine
    volumes:
      - ./vector.toml:/etc/vector/vector.toml:ro

  # grafana:
  #   image: grafana/grafana:9.5.3
  #   restart: on-failure
  #   volumes:
  #     - ../../config/grafana/datasource.yml:/etc/grafana/provisioning/datasources/datasource.yml
  #     - ../../config/grafana/custom.ini:/etc/grafana/grafana.ini
  #   ports:
  #     - '3000:3000'
  #   extra_hosts:
  #     - 'host.docker.internal:host-gateway'

  prometheus:
    image: prom/prometheus:v2.36.2
    restart: always
    volumes:
      - ../../config/prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    extra_hosts:
      - 'host.docker.internal:host-gateway'

  # node_exporter:
  #   image: quay.io/prometheus/node-exporter:latest
  #   container_name: node_exporter
  #   command:
  #     - '--path.rootfs=/host'
  #   network_mode: host
  #   pid: host
  #   restart: unless-stopped
  #   volumes:
  #     - '/:/host:ro,rslave'

  app:
    platform: "${BUILDPLATFORM:-linux/amd64}"
    restart: always
    build:
      context: ../.
    container_name: backend01
    env_file:
      - ../.env
    ports:
      - "${APP_PORT}:${APP_PORT}"
    depends_on:
      - postgres
    develop:
      watch:
        - action: rebuild
          path: ./

volumes:
  ch_data2:
  pg_data3:
  prometheus_data:
  mailpit_data:
